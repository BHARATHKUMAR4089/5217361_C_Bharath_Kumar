#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

int cmpfunc(const void *a, const void *b) {
    return ((int)a - (int)b);
}
int main() {
    int t;
    scanf("%d", &t);
    while(t--) {
        int n;
        scanf("%d", &n);
        int *a = (int *)malloc(n * sizeof(int));
        for(int i = 0; i < n; i++) {
            scanf("%d", &a[i]);
        }
        qsort(a, n, sizeof(int), cmpfunc);
        int mid = (n + 1)/2 - 1;
        int temp = a[mid];
        a[mid] = a[n-1];
        a[n-1] = temp;
        int st = mid + 1, ed = n - 2;
        while(st <= ed) {
            int temp2 = a[st];
            a[st] = a[ed];
            a[ed] = temp2;
            st++;
            ed--;
        }
        for (int i = 0; i < n; i++) {
            if (i > 0) {
                printf(" ");
            }
            printf("%d", a[i]);
            }
            printf("\n");

        free(a);
    }
    return 0;
}